name: Update Model Catalog

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering
  pull_request:
    branches: ["main"]

env:
  PYTHON_VERSION: '3.11'

jobs:
  update-catalog:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_SERVICE_ACCOUNT }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set date variables
        id: date
        run: |
          echo "today=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "today_with_time=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo "today_readable=$(date +'%d-%m-%Y')" >> $GITHUB_OUTPUT
          echo "datetime=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
          echo "datetime_short=$(date +'%d-%m-%Y %H:%M')" >> $GITHUB_OUTPUT

      - name: Run model catalog update script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python prepare_catalog.py | tee script_output.log
        timeout-minutes: 90

      - name: Extract summary from script output
        id: extract-summary
        run: |
          SUMMARY_LINE=$(tail -n 1 script_output.log)
          NEW_MODELS=$(echo "$SUMMARY_LINE" | grep -oP 'Added \K[0-9]+')
          TOTAL_MODELS=$(echo "$SUMMARY_LINE" | grep -oP 'total now \K[0-9]+')
          echo "new_models=$NEW_MODELS" >> $GITHUB_OUTPUT
          echo "total_models=$TOTAL_MODELS" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          base: main
          token: ${{ secrets.PAT_SERVICE_ACCOUNT }}
          branch: update-model-catalog-${{ steps.date.outputs.today_with_time }}
          commit-message: "🤖 Auto-update model catalog - ${{ steps.date.outputs.datetime }}"
          title: "🤖 Auto-update Model Catalog - ${{ steps.date.outputs.datetime_short }}"
          body: |
            ## 🤖 Automated Model Catalog Update

            ### **Date:** ${{ steps.date.outputs.datetime_short }}

            ### Summary

            - **New models added:** ${{ steps.extract-summary.outputs.new_models }}
            - **Total models in catalog:** ${{ steps.extract-summary.outputs.total_models }} 

      - name: Auto-merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_SERVICE_ACCOUNT }}
        run: |
          # Get the PR number from the create-pull-request action output
          PR_NUMBER=$(gh pr list --search "🤖 Auto-update Model Catalog" --json number --jq '.[0].number')
          
          if [ -n "$PR_NUMBER" ]; then
            echo "Found PR number: $PR_NUMBER"
            sleep 10
            
            # Check if PR is mergeable
            MERGEABLE=$(gh pr view "$PR_NUMBER" --json mergeable --jq '.mergeable')
            echo "PR mergeable status: $MERGEABLE"
            
            if [ "$MERGEABLE" = "MERGEABLE" ]; then
              echo "Merging PR $PR_NUMBER"
              gh pr merge --auto --merge "$PR_NUMBER"
              gh pr comment "$PR_NUMBER" --body "🤖 Auto-merged by GitHub Actions"
            else
              echo "PR is not mergeable"
              gh pr comment "$PR_NUMBER" --body "🤖 PR is not mergeable, please review and merge manually"
            fi
          else
            echo "No PR number found"
          fi
          
